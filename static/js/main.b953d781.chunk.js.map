{"version":3,"sources":["images/logo.svg","images/menu.svg","images/close.svg","images/pencil.svg","images/register-success.svg","images/register-error.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/utils.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteConfirmPopup.js","utils/auth.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","loggedIn","loggedInEmail","signOut","handleLoginState","menuState","isMobile","onClose","pathname","useLocation","textPath","linkPath","className","src","logo","alt","to","onClick","closeMenu","mobileMenu","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","card","onCardClick","onCardLike","onCardDelete","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","imageStyle","backgroundImage","link","key","style","name","type","length","Main","avatar","onEditAvatar","pen","data-id","about","onEditProfile","onAddPlace","cards","map","item","Footer","ImagePopup","isOpen","id","apiData","authorization","baseUrl","api","options","this","_url","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","userData","body","JSON","stringify","photoData","PopupWithForm","onSubmit","heading","children","isLoading","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","onChange","target","value","placeholder","pattern","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","focus","AddPlacePopup","newCard","setNewCard","onUpdateCard","DeleteConfirmPopup","onConfirmClick","BASE_URL","withRouter","onRegister","onConfirm","email","setEmail","password","setPassword","history","useHistory","emailRef","passwordRef","handleChange","handleSubmit","push","catch","onLogin","err","console","log","ProtectedRoute","Component","component","InfoTooltip","isRegisterSuccess","success","error","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","setCards","setCurrentUser","setIsLoading","cardDelete","setCardDelete","selectedCard","setSelectedCard","setLoggedIn","loginState","setLoginState","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","setIsRegisterSuccess","setisMobile","escape","require","tokenCheck","token","jwt","localStorage","getItem","data","handleRegisterSuccess","state","closeAllPopups","all","getUserInfo","getInitialCards","Provider","removeItem","handleloginState","exact","path","changeLikeCardStatus","newCards","c","Error","setItem","auth","finally","deleteCard","filter","editUserAvatar","editUserInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b953d781.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.cb1e08e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c0226d9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.9a053c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/register-success.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/register-error.4072126c.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\nimport mobileMenu from '../images/menu.svg';\nimport closeMenu from '../images/close.svg';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nfunction Header({ loggedIn, loggedInEmail, signOut, handleLoginState, menuState, isMobile, onClose}) {\n    const { pathname } = useLocation();\n    const textPath = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\n    const linkPath = `${pathname === '/sign-up' ? '/sign-in' : '/sign-up'}`;\n    \n\n    return (\n        <header className={(isMobile ? \"header \" : \"header\")}>\n            <img className=\"logo\" src={logo} alt=\"лого\" />\n           \n            <nav className={(isMobile ? \"header__nav active\" : \"header__nav\")}>\n                {loggedIn ?\n                    <>\n                        <p className=\"header__email\">{loggedInEmail}</p>\n                        <Link className=\"header__link header__link_logged\" to=\"/sign-in\" onClick={signOut}>Выйти</Link>\n                    </>\n                    : <Link to={linkPath} className=\"link header__link\" onClick={handleLoginState}>{textPath}</Link>}\n            </nav>\n\n            <button className=\"header__burger\" onClick={menuState} onClose={onClose}>\n                <img className=\"header__burger-menu\" src={isMobile ? closeMenu : mobileMenu} alt=\"\" />\n            </button>\n        </header>\n    );\n}\nexport default Header;","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    // Определяем, являемся ли мы владельцем текущей карточки\n\n    const {\n        card,\n        onCardClick,\n        onCardLike,\n        onCardDelete } = props;\n    const isOwn = card.owner._id === currentUser._id;\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `card__trash ${isOwn ? '' : 'card__trash_hidden'}`\n    );\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (`card__like-btn ${isLiked ? 'card__like-btn_active' : ''}`);\n\n    function handleClick() {\n        onCardClick(card)\n    }\n    function handleLike() {\n        onCardLike(card)\n    }\n    function handleDelete() {\n        onCardDelete(card)\n    }\n\n    const imageStyle = {\n        backgroundImage: `url(${card.link})`,\n    };\n    return (\n        <div className=\"card\" key={card._id}>\n            <div className=\"card__image\" onClick={handleClick} style={imageStyle} />\n            <div className=\"card__description\">\n                <h3 className=\"card__title\">{card.name}</h3>\n                <div className=\"card__like\">\n                    <button className={cardLikeButtonClassName} onClick={handleLike} type=\"button\"></button>\n                    <span className=\"card__like-counter\">{card.likes.length}</span>\n                </div>\n            </div>\n            <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDelete} ></button>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport pen from '../images/pencil.svg';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__box\">\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"аватар\" />\n                    <img className=\"profile__pencil\" onClick={props.onEditAvatar} src={pen} alt=\"Редактировать\" />\n                </div>\n                <div className=\"profile__info\">\n                    <div>\n                        <h1 className=\"profile__name\" data-id=\"\">{currentUser.name}</h1>\n                        <p className=\"profile__description\">{currentUser.about}</p>\n                    </div>\n                    <button className=\"profile__edit-button\" onClick={props.onEditProfile} type=\"button\" />\n                </div>\n                <button className=\"add-button\" onClick={props.onAddPlace} type=\"button\" />\n            </section>\n\n            <section className=\"cards\">\n                {props.cards.map(item =>\n                    <Card\n                        key={item._id}\n                        card={item}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n                    />)}\n            </section>\n        </main>\n    );\n}\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Самира</p>\n        </footer>\n    )\n}\nexport default Footer","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={(props.card.isOpen ? \"popup popup_opened\" : \"popup\")} id=\"view-image\">\n            <figure className=\"popup__view\">\n                <button className=\"popup__close\" id=\"close-view\" onClick={props.onClose} type=\"button\">+</button>\n                <img className=\"popup__image\" alt={props.card.name} src={props.card.link} />\n                <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n            </figure>\n        </section>\n    );\n}\nexport default ImagePopup;\n\n\n","\n//Api Token\nconst apiData = {\n    authorization: '34b93c83-0a5b-42af-bf4b-3169bf836bcd',\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12'\n};\nexport default apiData;\n","import apiData from './utils.js';\n\nclass Api {\n\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    //получить изначальный массив карточек\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //получить данные пользователя\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //обновить данные юзера\n    editUserInfo(userData) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: userData.name,\n                about: userData.about\n            }),\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //Редактирование аватара\n    editUserAvatar(userData) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: userData.avatar\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Добавление новой карточки на сервер\n    addNewCard(photoData) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: photoData.name,\n                link: photoData.link\n\n            })\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Удаление Карточки\n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Добавление Лайков\n    changeLikeCardStatus(id, status) {\n        return fetch(`${this._url}/cards/likes/${id}`, {\n            method: `${(status) ? `PUT` : `DELETE`}`,\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Удаление Лайков\n    deleteLike(card) {\n        return fetch(`${this._url}/cards/likes/${card._id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n}\n\n//создаем экземпляр класса Api\nconst api = new Api({\n    baseUrl: apiData.baseUrl,\n    headers: {\n        authorization: apiData.authorization,\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={(props.isOpen ? \"popup popup_opened\" : \"popup\")} id={props.name}>\n            <div className=\"popup__content\" id=\"edit-popup-form\">\n                <button className=\"popup__close\" onClick={props.onClose} id=\"popup-close-edit\" type=\"button\">+</button>\n\n                <form onSubmit={props.onSubmit} className=\"popup__form popup__edit_profile\" name=\"edit\">\n                    <h3 className=\"popup__heading\">{props.heading}</h3>\n                    {props.children}\n                    <button className=\"popup__save-btn\" id=\"popup-save-btn\" type=\"submit\">{props.isLoading ? 'Загрузка...' : props.buttonText}</button>\n                </form>\n            </div>\n        </section>\n    );\n}\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleNameInput(e) {\n        setName(e.target.value);\n    }\n    function handleDescriptionInput(e) {\n        setDescription(e.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} heading=\"Редактировать профиль\" buttonText=\"Сохранить\" isLoading={props.isLoading}>\n            <input\n                className=\"popup__field popup__field_name\"\n                onChange={handleNameInput}\n                value={name}\n                id=\"name-field\"\n                placeholder=\"Имя\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"[A-Za-zА-Яа-яЁё -]*\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required />\n            <span className=\"popup__span-error\" id=\"name-field-error\"></span>\n            <input\n                className=\"popup__field popup__field_job\"\n                value={description}\n                onChange={handleDescriptionInput}\n                id=\"job-field\" placeholder=\"О себе\"\n                type=\"text\"\n                name=\"about\"\n                required\n                minLength=\"2\"\n                maxLength=\"200\" />\n            <span className=\"popup__span-error\" id=\"job-field-error\"></span>\n        </PopupWithForm >\n    )\n\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction EditAvatarPopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value, /* Значение инпута, полученное с помощью рефа */\n        });\n    }\n\n    function handleClick() {\n        avatarRef.current.focus(); \n        // вызываем нужный метод на поле current объекта\n      }\n\n      React.useEffect(() => {\n        avatarRef.current.value = '';\n      }, [currentUser]);\n\n    return (\n        <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} heading=\"Обновить аватар?\" buttonText=\"Сохранить\" isLoading={props.isLoading}>\n            <input\n                className=\"popup__field popup__field_avatar\"\n                ref={avatarRef}\n                onChange={handleClick}\n                id=\"url-input\"\n                placeholder=\"Ссылка на картинку\"\n                type=\"url\"\n                name=\"link\"\n                required />\n            <span className=\"popup__span-error\" id=\"url-input-error\"></span>\n        </PopupWithForm>\n\n    )\n}\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nfunction AddPlacePopup(props) {\n    const [newCard, setNewCard] = React.useState({ name: '', link: '' });\n\n    React.useEffect(() => {\n        setNewCard({ name: '', link: '' });\n        \n      }, [props.isOpen]);\n\n    function handleCardNameInput(e) {\n        setNewCard({ ...newCard, name: e.target.value });\n    }\n    function handleLinkInput(e) {\n        setNewCard({ ...newCard, link: e.target.value });\n    }\n\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateCard(newCard);\n    }\n\n    return (\n\n        <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} heading=\"Новое место\" buttonText=\"Создать\" isLoading={props.isLoading}>\n            <input\n                className=\"popup__field popup__field_card\"\n                id=\"title-input\"\n                onChange={handleCardNameInput}\n                placeholder=\"Название\"\n                type=\"text\"\n                name=\"name\"\n                value={newCard.name}\n                required\n                minLength=\"1\"\n                maxLength=\"30\" />\n            <span className=\"popup__span-error\" id=\"title-input-error\"></span>\n            <input\n                className=\"popup__field popup__field_link\"\n                onChange={handleLinkInput}\n                value={newCard.link}\n                id=\"url-input\" placeholder=\"Ссылка на картинку\"\n                type=\"url\"\n                required name=\"link\" />\n            <span className=\"popup__span-error\" id=\"url-input-error\"></span>\n        </PopupWithForm >\n    )\n}\nexport default AddPlacePopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nfunction DeleteConfirmPopup(props) {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onConfirmClick();\n    }\n\n    return (\n        <PopupWithForm heading=\"Вы уверены?\" buttonText=\"Да\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} />\n    )\n}\n\nexport default DeleteConfirmPopup","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const authorise = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          console.log('1');\n          console.log(res.status);\n          return res.json();\n        }\n        if (res.status === 400) {\n          throw new Error('не передано одно из полей');\n        }\n        if (res.status === 401) {\n          throw new Error('пользователь с email не найден');\n        }\n      }\n      catch (e) {\n        console.log(e);\n        return e;\n      }\n    })\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n      return;\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Что-то пошло не так: ${res.status}`);\n      }\n    });\n}\n/*\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(res => res.json())\n    .then(data => data)\n}\n*/\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(res => res.json())\n    .then(data => data)\n}","import React from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\n\n\n\nfunction Register({ onRegister, onConfirm }) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const history = useHistory();\n\n  const emailRef = React.useRef();\n  const passwordRef = React.useRef();\n\n  function handleChange(e) {\n    const { value } = e.target;\n    e.target.name === 'email'\n      ? setEmail(value)\n      : setPassword(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    onRegister({ email, password })\n      .then(() => {\n        onConfirm(true);\n        history.push('/sign-in');\n      })\n      .catch(() => {\n        onConfirm(false);\n      });\n  }\n\n  return (\n    <div className=\"auth\">\n      <p className=\"auth__heading\">Регистрация</p>\n      <form onSubmit={handleSubmit} className=\"auth__form\">\n        <input\n          className=\"auth__input\"\n          onChange={handleChange}\n          id=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          minLength='6'\n          maxLength=\"40\"\n          required\n          ref={emailRef} />\n\n        <input\n          className=\"auth__input\"\n          onChange={handleChange}\n          id=\"password\"\n          placeholder=\"Пароль\"\n          type=\"password\"\n          value={password}\n          name=\"password\"\n          maxLength=\"40\"\n          required\n          ref={passwordRef} />\n\n        <button className=\"auth__submit-btn\" type=\"submit\" onSubmit={handleSubmit}>Зарегистрироваться</button>\n      </form>\n      <div className=\"auth__entry\">\n        <Link to=\"/login\" className=\"auth__login-link\">Уже зарегистрированы? Войти</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Register);","import React from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\n\n\n\nfunction Login({ onLogin }) {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const history = useHistory();\n\n\n    function handleChange(e) {\n        const { value } = e.target;\n        e.target.name === 'email'\n          ? setEmail(value)\n          : setPassword(value);\n      }\n\n   function handleSubmit(e) {\n        e.preventDefault();\n        if (!email || !password) {\n            return;\n        }\n        onLogin({ email, password })\n          .then(()=>{\n             history.push(\"/\");\n          })\n            .catch(err => console.log(err)); // запускается, если пользователь не найден \n    }\n   \n        return (\n            <div className=\"auth\">\n                <p className=\"auth__heading\">Вход</p>\n                <form onSubmit={handleSubmit} className=\"auth__form\">\n                    <input\n                        className=\"auth__input\"\n                        onChange={handleChange}\n                        id=\"email\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        maxLength=\"40\"\n                        required />\n\n                    <input\n                        className=\"auth__input\"\n                        \n                        id=\"password\"\n                        placeholder=\"Пароль\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                        maxLength=\"40\"\n                        required />\n\n                    <button className=\"auth__submit-btn\" type=\"submit\" onSubmit={handleSubmit}>Войти</button>\n                </form>\n                <div className=\"auth__entry\">\n                    <Link to=\"/register\" className=\"auth__login-link\">Еще не зарегистрированы? Регистрация</Link>\n                </div>\n            </div>\n        );\n    }\n\n\n\nexport default withRouter(Login);","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-up\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;","import React from 'react';\nimport success from '../images/register-success.svg';\nimport error from '../images/register-error.svg';\n\nfunction InfoTooltip({ onClose, isOpen, isRegisterSuccess }) {\n  console.log(isRegisterSuccess);\n  return (\n\n    <section className={(isOpen ? 'popup popup_opened' : 'popup')}>\n      <div className=\"popup__content\" id=\"infotooltip-popup\">\n        <button className=\"popup__close\" onClick={onClose} type=\"button\">+</button>\n        <img src={isRegisterSuccess ? success : error}\n          alt={isRegisterSuccess ? \"Успешная регистрация.\" : \"Ошибка при регистрации\"}\n          className=\"popup__register-img\" />\n        <h2 className=\"popup__register-title\">\n          {isRegisterSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\n        </h2>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoTooltip;","import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteConfirmPopup from './DeleteConfirmPopup';\nimport * as auth from '../utils/auth.js';\nimport Register from './Register.js';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport escapeHTML from 'escape-html';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '', _id: '' });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [cardDelete, setCardDelete] = React.useState({});\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpen: false,\n    name: '',\n    link: ''\n  });\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  //const [loggedInEmail, setLoggedInEmail] = React.useState('');\n  const [loginState, setLoginState] = React.useState(true);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = React.useState(false);\n  const [isMobile, setisMobile] = React.useState(false);\n\n  const history = useHistory();\n  const escape = require('escape-html')\n\n  function mobileMenuToggle(){\n    isMobile ? setisMobile(false) : setisMobile(true);\n    \n  }\n\n  // Записать токен\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage,\n    // эта функция проверит валидность токена\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      // проверим токен\n      auth.getContent(jwt).then((res) => {\n        if (res) {\n          //setLoggedIn(true);\n          setEmail({\n            email: res.data.email\n          });\n          setLoggedIn(true);\n          history.push('/');\n        }\n      })\n        .catch((err) => {\n          console.log(err);\n          history.push('/sign-in');\n        })\n    }\n  }\n\n  // Проверить токен\n  React.useEffect(() => {\n    tokenCheck();\n  }, [history]);\n\n  // Регистрация\n  function handleRegister({ email, password }) {\n    setIsLoading(true);\n    return auth.register(email, escape(password))\n\n      .then(res => {\n        if (res) {\n          //return res.json();\n          handleRegisterSuccess(true);\n        } else {\n          handleRegisterSuccess(false);\n          //return Promise.reject(`Что-то пошло не так: ${res.status}`);\n        }\n      });\n  }\n\n  function handleLogin({ email, password }) {\n    setIsLoading(true);\n    return auth.authorise(email, escape(password))\n      .then((res) => {\n        if (res && res.token) {\n          localStorage.setItem('jwt', res.token);\n          tokenCheck();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleLogOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  }\n\n  function handleloginState() {\n    setLoginState(false);\n  }\n\n  React.useEffect(() => {\n\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cards]) => {\n        setCards(cards);\n        setCurrentUser(userData);\n\n      })\n      .catch(err => console.log(err));\n\n  }, []);\n\n\n  function handleRegisterSuccess(state) {\n    setIsInfoTooltipPopupOpen(true);\n    setIsRegisterSuccess(state);\n\n  }\n\n\n  //обработчики открытия попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleConfirmPopupClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n  //при нажатии на удаление карточки открываем попам подтверждения\n  function handleCardDelete(card) {\n    setCardDelete(card)\n    handleConfirmPopupClick();\n  }\n  //обработчик закрытия попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard(false);\n    setIsInfoTooltipPopupOpen(false);\n  }\n\n  function handleCardClick(props) {\n    setSelectedCard({\n      isOpen: true,\n      name: props.name,\n      link: props.link\n    });\n  }\n  //обработчик обновления данных пользователя\n  function handleUpdateUser(userData) {\n    setIsLoading(true);\n    api.editUserInfo(userData)\n      .then((res) => {\n        setCurrentUser({ ...currentUser, name: res.name, about: res.about });\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n  //обработчик обновления аватара\n  function handleUpdateAvatar(userData) {\n    setIsLoading(true);\n    api.editUserAvatar(userData)\n      .then((res) => {\n        setCurrentUser({ ...currentUser, avatar: res.avatar });\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  //обработчик добавления карточки\n  function handleAddPlaceSubmit(data) {\n    setIsLoading(true);\n    api.addNewCard(data)\n      .then((photoData) => {\n        setCards([...cards, photoData]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n  }\n\n  //обработчик удаления карточки\n  function handleCardDeleteSubmit() {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(cardDelete._id)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.filter((c) => c._id !== cardDelete._id);\n        // Обновляем стейт\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n\n      <div className=\"mobile\"></div>\n      <div className=\"page\">\n        <Header\n          loggedInEmail={email.email}\n          loginState={loginState}\n          loggedIn={loggedIn}\n          signOut={handleLogOut}\n          handleloginState={handleloginState} \n          isMobile={isMobile}\n          menuState={mobileMenuToggle}/>\n        <Switch>\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Route path='/sign-in'>\n            <Login onLogin={handleLogin} />\n          </Route>\n          <Route path='/sign-up'>\n            <Register onRegister={handleRegister}\n              onConfirm={handleRegisterSuccess} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n\n        <DeleteConfirmPopup isOpen={isDeleteCardPopupOpen} onClose={closeAllPopups} onConfirmClick={handleCardDeleteSubmit} />\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} isLoading={isLoading} />\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdateCard={handleAddPlaceSubmit} isLoading={isLoading} />\n\n        <InfoTooltip isOpen={isInfoTooltipPopupOpen} onClose={closeAllPopups} isRegisterSuccess={isRegisterSuccess} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <Footer />\n\n      </div>\n    </CurrentUserContext.Provider >\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}